<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.knpark.repository.ReservationRepository" >
	<resultMap type="Reservation" id="CampResult">
		<result property="campno" column="campno"/>
		<result property="campname" column="campname"/>
		<result property="parkname" column="parkname"/>
		<result property="campaddress" column="campaddress"/>
		<result property="camptel" column="camptel"/>
	</resultMap>
	<resultMap type="Reservation" id="ShelterResult">
		<result property="shelterno" column="shelterno"/>
		<result property="sheltername" column="sheltername"/>
		<result property="parkname" column="parkname"/>
		<result property="shelteraddress" column="shelteraddress"/>
		<result property="sheltertel" column="sheltertel"/>
	</resultMap>
	<resultMap type="Reservation" id="ExploreResult">
		<result property="exploreno" column="exploreno"/>
		<result property="explorename" column="explorename"/>
		<result property="parkname" column="parkname"/>
		<result property="exploreaddress" column="exploreaddress"/>
		<result property="exploretel" column="exploretel"/>
	</resultMap>
	<resultMap type="Reservation" id="ReservedResult">
		<result property="resno" column="resno"/>
		<result property="campno" column="campno"/>
		<result property="shelterno" column="shelterno"/>
		<result property="exploreno" column="exploreno"/>
		<result property="resdate" column="resdate"/>
		<result property="rem" column="rem"/>
	</resultMap>
	<resultMap type="Reservation" id="BookingResult">
		<result property="bno" column="bno"/>
		<result property="id" column="id"/>
		<result property="camp_parkname" column="camp_parkname"/>
		<result property="shelter_parkname" column="shelter_parkname"/>
		<result property="explore_parkname" column="explore_parkname"/>
		<result property="campno" column="campno"/>
		<result property="shelterno" column="shelterno"/>
		<result property="exploreno" column="exploreno"/>
		<result property="status" column="status"/>
		<result property="bdate" column="bdate"/>
	</resultMap>
	<!-- 야영장 리스트 출력 -->
	<select id="getCampList" parameterType="String" resultMap="CampResult">
		SELECT CAMPNO, CAMPNAME FROM CAMP WHERE PARKNAME = #{parkname}
	</select>
	<!-- 예약 가능 여부 확인(해당 날짜에 자리 유무 체크) -->
	<select id="getCampDateRem" parameterType="Reservation" resultType="java.sql.Date">
		SELECT RESDATE FROM RESERVED WHERE CAMPNO = #{campno} AND REM > 0 AND RESDATE = #{resdate}
	</select>
	<!-- 본인 예약내역에 중복된 예약 날짜 확인 -->
	<select id="getCampBookingDate" parameterType="Reservation" resultType="int">
		SELECT * FROM BOOKING WHERE BDATE = #{bdate} AND ID = #{id}
	</select>
	<!-- 예약 처리 -->
	<insert id="reservationCamp" parameterType="Reservation">
		INSERT INTO BOOKING (BNO, ID, CAMPNO, STATUS, BDATE) VALUES (BOOKING_SQ.NEXTVAL, #{id}, #{campno}, 1, #{bdate})
	</insert>
	<!-- 예약 성공 시, rem(잔여량) 감소 -->
	<update id="remMinus" parameterType="Reservation">
		UPDATE RESERVED SET REM = REM - 1 WHERE CAMPNO = #{campno} AND RESDATE = #{resdate}
	</update>
	<!-- 예약 내역 출력 -->
	<select id="getBookingInfo" parameterType="String" resultMap="BookingResult">
    SELECT 
	    A.*, 
	    B.PARKNAME AS CAMP_PARKNAME, b.CAMPNAME, 
	    C.PARKNAME AS SHELTER_PARKNAME, c.SHELTERNAME,
	    D.PARKNAME AS EXPLORE_PARKNAME, d.EXPLORENAME
			FROM BOOKING A
			LEFT JOIN CAMP B ON A.CAMPNO = B.CAMPNO
			LEFT JOIN SHELTER C ON A.SHELTERNO = C.SHELTERNO
			LEFT JOIN EXPLORE D ON A.EXPLORENO = D.EXPLORENO
			WHERE A.ID = #{id}
	</select>
	<!-- 예약 취소 -->
	<update id="cancleReservation" parameterType="int">
		UPDATE BOOKING SET STATUS = 0 WHERE BNO = #{bno}
	</update>
	
	<update id="remPlus" parameterType="Reservation">
		UPDATE RESERVED SET REM = REM + 1 WHERE CAMPNO = #{campno} AND RESDATE = #{resdate}
	</update>
	<!-- 대피로 리스트 출력 -->
	<select id="getShelterList" parameterType="String" resultMap="ShelterResult">
		SELECT SHELTERNO, SHELTERNAME FROM SHELTER WHERE PARKNAME = #{parkname}
	</select>
	<!-- 대피소 예약 가능 여부 -->
	<select id="getShelterDateRem" parameterType="Reservation" resultType="java.sql.Date">
		SELECT RESDATE FROM RESERVED WHERE SHELTERNO = #{shelterno} AND REM > 0 AND RESDATE = #{resdate}
	</select>
	<!-- 대피소 예약 -->
	<insert id="reservationShelter" parameterType="Reservation">
		INSERT INTO BOOKING (BNO, ID, SHELTERNO, STATUS, BDATE) VALUES (BOOKING_SQ.NEXTVAL, #{id}, #{shelterno}, 1, #{bdate})
	</insert>
	<!-- 대피소 rem 조정 -->
	<update id="remMinusShelter" parameterType="Reservation">
		UPDATE RESERVED SET REM = REM - 1 WHERE SHELTERNO = #{shelterno} AND RESDATE = #{resdate}
	</update>
	
	<!-- 관리자 예약현황 -->
	<select id="getAdminReservation" parameterType="String" resultMap="BookingResult">
		SELECT 
    A.*, 
    B.PARKNAME AS CAMP_PARKNAME, b.CAMPNAME, 
    C.PARKNAME AS SHELTER_PARKNAME, c.SHELTERNAME,
    D.PARKNAME AS EXPLORE_PARKNAME, d.EXPLORENAME
		FROM BOOKING A
		LEFT JOIN CAMP B ON A.CAMPNO = B.CAMPNO
		LEFT JOIN SHELTER C ON A.SHELTERNO = C.SHELTERNO
		LEFT JOIN EXPLORE D ON A.EXPLORENO = D.EXPLORENO
		WHERE B.PARKNAME = #{parkname} OR C.PARKNAME = #{parkname} OR D.PARKNAME = #{parkname}
	</select>
	<!-- 관리자 예약관리 -->
	<select id="getReservedList" parameterType="Reservation" resultMap="ReservedResult">
		<if test="search == null">
			SELECT 
	    A.*, 
	    B.PARKNAME AS CAMP_PARKNAME, b.CAMPNAME, 
	    C.PARKNAME AS SHELTER_PARKNAME, c.SHELTERNAME,
	    D.PARKNAME AS EXPLORE_PARKNAME, d.EXPLORENAME
			FROM RESERVED A
			LEFT JOIN CAMP B ON A.CAMPNO = B.CAMPNO
			LEFT JOIN SHELTER C ON A.SHELTERNO = C.SHELTERNO
			LEFT JOIN EXPLORE D ON A.EXPLORENO = D.EXPLORENO
			WHERE B.PARKNAME = #{parkname} OR C.PARKNAME = #{parkname} OR D.PARKNAME = #{parkname}
		</if>
		<if test="search != null">
			SELECT 
	    A.*, 
	    B.PARKNAME AS CAMP_PARKNAME, b.CAMPNAME, 
	    C.PARKNAME AS SHELTER_PARKNAME, c.SHELTERNAME,
	    D.PARKNAME AS EXPLORE_PARKNAME, d.EXPLORENAME
			FROM RESERVED A
			LEFT JOIN CAMP B ON A.CAMPNO = B.CAMPNO
			LEFT JOIN SHELTER C ON A.SHELTERNO = C.SHELTERNO
			LEFT JOIN EXPLORE D ON A.EXPLORENO = D.EXPLORENO
			WHERE (B.PARKNAME = #{parkname} OR C.PARKNAME = #{parkname} OR D.PARKNAME = #{parkname}) AND TO_CHAR(RESDATE, 'YYYY-MM-DD') = #{search, jdbcType=VARCHAR}
		</if>
		
	</select>
	<!-- 관리자 예약조정 -->
	<select id="reservedRemControl" parameterType="Reservation">
		UPDATE RESERVED SET REM = #{rem} WHERE RESNO = #{resno} AND RESDATE = #{resdate}
	</select>
	<!-- 관리자 예약일자 등록(당일) -->
	<insert id="todayDateAdd" parameterType="Reservation">
		<if test="type == 'camp'">
			INSERT INTO RESERVED (RESNO, CAMPNO, RESDATE, REM) VALUES (RESERVED_SQ.NEXTVAL, #{campno}, SYSDATE, 20)
		</if>
		<if test="type == 'shelter'">
			INSERT INTO RESERVED (RESNO, SHELTERNO, RESDATE, REM) VALUES (RESERVED_SQ.NEXTVAL, #{shelterno}, SYSDATE, 20)
		</if>
	</insert>
	<!-- 관리자 예약일자 등록(익일) -->
	<insert id="nextDateAdd" parameterType="Reservation">
		<if test="type == 'camp'">
			INSERT INTO RESERVED (RESNO, CAMPNO, RESDATE, REM) VALUES (RESERVED_SQ.NEXTVAL, #{campno}, SYSDATE+1, 20)
		</if>
		<if test="type == 'shelter'">
			INSERT INTO RESERVED (RESNO, SHELTERNO, RESDATE, REM) VALUES (RESERVED_SQ.NEXTVAL, #{shelterno}, SYSDATE+1, 20)
		</if>
	</insert>
	<!-- 관리자 예약일자 등록(지정일) -->
	<insert id="preDateAdd" parameterType="Reservation">
		<if test="type == 'camp'">
			INSERT INTO RESERVED (RESNO, CAMPNO, RESDATE, REM) VALUES (RESERVED_SQ.NEXTVAL, #{campno}, #{resdate}, 20)
		</if>
		<if test="type == 'shelter'">
			INSERT INTO RESERVED (RESNO, SHELTERNO, RESDATE, REM) VALUES (RESERVED_SQ.NEXTVAL, #{shelterno}, #{resdate}, 20)
		</if>
	</insert>
	
	<select id="dateConfirm" parameterType="Reservation" resultType="int">
		<if test="type == 'camp'">
			SELECT COUNT(*) FROM RESERVED WHERE CAMPNO = #{campno} AND TO_CHAR(RESDATE, 'YYYY-MM-DD') = #{resdate}
		</if>
		<if test="type == 'shelter'">
			SELECT COUNT(*) FROM RESERVED WHERE SHELTERNO = #{shelterno} AND TO_CHAR(RESDATE, 'YYYY-MM-DD') = #{resdate}
		</if>
	</select>
</mapper>